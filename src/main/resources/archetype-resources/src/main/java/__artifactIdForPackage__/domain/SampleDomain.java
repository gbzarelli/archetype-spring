package ${customPackage}.domain;

import ${customPackage}.dto.InputDTO;
import ${customPackage}.dto.OutputDTO;
import ${customPackage}.exception.RegisterException;
import ${customPackage}.exception.ValidateRegisterException;
import ${customPackage}.model.entity.SampleEntity;
import ${customPackage}.service.SampleService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * Class auto-generated by archetype-spring project
 * Repository: http://californio.keynet.com.br:8089/java/archetype/archetype-spring
 */
@Service
public class SampleDomain {

    private final SampleService sampleService;

    @Autowired
    public SampleDomain(SampleService sampleService) {
        this.sampleService = sampleService;
    }

    public OutputDTO process(InputDTO inputDTO) throws RegisterException, ValidateRegisterException {
            try {
                //Here I can put my rules, and decide where my domain register the data, maybe I can use another service.
                return registerSampleEntity(inputDTO);
            } catch (Exception throwable) {
                throw throwable;
            }
    }

    private OutputDTO registerSampleEntity(InputDTO inputDTO) throws RegisterException, ValidateRegisterException {
        SampleEntity sampleEntity = InputDTO.toSampleEntity(inputDTO);
        sampleEntity = sampleService.register(sampleEntity);
        return OutputDTO.fromSampleEntity(sampleEntity);
    }

}
